---
apiVersion: v1
kind: Namespace
metadata:
  name: lighthouse
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: lighthouse-sc
provisioner: efs.csi.aws.com
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: lighthouse-volume
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: lighthouse-sc
  csi:
    driver: efs.csi.aws.com
    volumeHandle: $EFS_VOLUME
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: lighthouse-claim
  namespace: lighthouse
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: lighthouse-sc
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-lighthouse
  namespace: lighthouse
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: app-lhci
  replicas: 2
  template:
    metadata:
      labels:
        app.kubernetes.io/name: app-lhci
    spec:
      containers:
      - name: app-lhci-bk
        image: lighthouse
        ports:
          - name: app-lhci-bk
            containerPort: 9001
        volumeMounts:
        - name: persistent-storage
          mountPath: /data
      - name: app-lhci-fr
        image: lighthouse-nginx
        ports:
        - containerPort: 80
      volumes:
        - name: persistent-storage
          persistentVolumeClaim:
            claimName: lighthouse-claim
---
apiVersion: v1
kind: Service
metadata:
  namespace: lighthouse
  name: service-lighthouse
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  type: NodePort
  selector:
    app.kubernetes.io/name: app-lhci
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: lighthouse
  name: ingress-lighthouse
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-path: /healthcheck
spec:
  rules:
    - http:
        paths:
          - path: /*
            backend:
              serviceName: service-lighthouse
              servicePort: 80
