apiVersion: v1
kind: Namespace
metadata:
  name: lighthouse
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: lighthouse
  name: lhci-data-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: lighthouse
  name: lhci-server
spec:
  selector:
    matchLabels:
      name: lhci-server
  strategy:
    type: Recreate
  template:
    metadata:
      name: lhci-pod
      labels:
        name: lhci-server
    spec:
      containers:
        - name: lhci-server
          image: lighthouse
          volumeMounts:
            - mountPath: '/data'
              name: lhci-data-volume
          ports:
            - name: lhci
              containerPort: 9001
        - name: lhci-web
          image: lighthouse-nginx
          ports:
            - name: lhci-web
              containerPort: 80
      volumes:
        - name: lhci-data-volume
          persistentVolumeClaim:
            claimName: lhci-data-claim
---
apiVersion: v1
kind: Service
metadata:
  namespace: lighthouse
  name: lhci-service
spec:
  selector:
    app: lhci-server
  type: NodePort
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lh1
  namespace: lighthouse
  annotations:
    kubernetes.io/ingress.class: 'alb'
    alb.ingress.kubernetes.io/scheme: 'internet-facing'
    alb.ingress.kubernetes.io/healthcheck-path: '/healthcheck'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '10'
spec:
  defaultBackend:
    service:
      name: lhci-service
      port:
        number: 80
